# Set the prefix.
set -g prefix C-Space

# Close the current session.
bind -n M-q kill-session

# Close the current pane.
bind -n M-w kill-pane

# Reload the config file.
bind -n M-r source-file ~/.config/tmux/tmux.conf \;

# detach from tmux session
bind -n M-d detach-client

# Show the command prompt.
bind -n M-p command-prompt

# Create panes.
bind -n M-t split-window -h -c "#{pane_current_path}"
bind -n M-T split-window -v -c "#{pane_current_path}"

# Select an adjacent pane.
bind -n M-h select-pane -L
bind -n M-j select-pane -D
bind -n M-k select-pane -U
bind -n M-l select-pane -R

# Resize the selected pane.
bind -n M-C-h resize-pane -L 10
bind -n M-C-j resize-pane -D 10
bind -n M-C-k resize-pane -U 10
bind -n M-C-l resize-pane -R 10

# Move the selected pane.
bind -n M-H swap-pane -U
bind -n M-J swap-pane -D
bind -n M-K swap-pane -U
bind -n M-L swap-pane -D

# select window
bind -n M-1 if-shell 'tmux select-window -t 1' 'select-window -t 1' 'new-window -t 1'
bind -n M-2 if-shell 'tmux select-window -t 2' 'select-window -t 2' 'new-window -t 2'
bind -n M-3 if-shell 'tmux select-window -t 3' 'select-window -t 3' 'new-window -t 3'
bind -n M-4 if-shell 'tmux select-window -t 4' 'select-window -t 4' 'new-window -t 4'
bind -n M-5 if-shell 'tmux select-window -t 5' 'select-window -t 5' 'new-window -t 5'
bind -n M-6 if-shell 'tmux select-window -t 6' 'select-window -t 6' 'new-window -t 6'
bind -n M-7 if-shell 'tmux select-window -t 7' 'select-window -t 7' 'new-window -t 7'
bind -n M-8 if-shell 'tmux select-window -t 8' 'select-window -t 8' 'new-window -t 8'
bind -n M-9 if-shell 'tmux select-window -t 9' 'select-window -t 9' 'new-window -t 9'
bind -n M-0 if-shell 'tmux select-window -t 10' 'select-window -t 10' 'new-window -t 10'

# Move the selected pane to a different window.
bind -n M-! break-pane -d -t 1
bind -n M-@ break-pane -d -t 2
bind -n M-# break-pane -d -t 3
bind -n M-$ break-pane -d -t 4
bind -n M-% break-pane -d -t 5
bind -n M-^ break-pane -d -t 6
bind -n M-& break-pane -d -t 7
bind -n M-* break-pane -d -t 8
bind -n M-( break-pane -d -t 9
bind -n M-) break-pane -d -t 10

# Enable mouse support.
set -g mouse on

# Use the system clipboard.
set -g set-clipboard on

# Do not wait after hitting escape.
set -s escape-time 0

# set first window to index 1, not 0
set -g base-index 1
set -g pane-base-index 1

# Ring the bell if any background window rang a bell
set -g bell-action any

# Pane border.
set -g pane-border-format 'â”€'
set -g pane-border-style fg=#333333
set -g pane-active-border-style fg=#054280

# Status bar.
set -g status on
set -g status-position top
set -g status-justify "left"
set -g status-left ""
set -g status-right ""
set -g window-status-format " #I "
set -g window-status-current-format "#[bg=#333333,bold] #I "
set -g status-style bg=#222222,fg=#aaaaaa
set -g message-command-style bg=#222222,fg=#aaaaaa
set -g message-style bg=#222222,fg=#aaaaaa

# Visual mode.
bind -n M-c copy-mode-vi
bind -T copy-mode-vi Escape send -X cancel
bind -T copy-mode-vi v send -X begin-selection
bind -T copy-mode-vi y send -X copy-selection

# vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind -n M-h if-shell "$is_vim" "send-keys M-h" "select-pane -L"
bind -n M-j if-shell "$is_vim" "send-keys M-j" "select-pane -D"
bind -n M-k if-shell "$is_vim" "send-keys M-k" "select-pane -U"
bind -n M-l if-shell "$is_vim" "send-keys M-l" "select-pane -R"
bind -T copy-mode-vi M-h select-pane -L
bind -T copy-mode-vi M-j select-pane -D
bind -T copy-mode-vi M-k select-pane -U
bind -T copy-mode-vi M-l select-pane -R

